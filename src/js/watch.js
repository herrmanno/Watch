var ho;
(function (ho) {
    var watch;
    (function (watch_1) {
        var ie8 = !-[1,];
        watch_1.interval = 400;
        function watch(obj, name, handler) {
            !ie8 ? watchIE8(obj, name, handler) : watchNewer(obj, name, handler);
        }
        watch_1.watch = watch;
        function watchNewer(obj, name, handler) {
            var oldval = obj[name];
            var newval = oldval;
            var getter = function () {
                return newval;
            };
            var setter = function (val) {
                oldval = newval;
                newval = val;
                handler.call(obj, name, oldval, val);
            };
            if (delete obj[name]) {
                Object.defineProperty(this, name, {
                    get: getter,
                    set: setter,
                    enumerable: true,
                    configurable: true
                });
            }
            else
                throw "Could not watch property " + name + " on Object " + obj;
        }
        function watchIE8(obj, name, handler) {
            new Watcher(obj, name, handler);
        }
        var Watcher = (function () {
            function Watcher(obj, name, handler) {
                this.obj = obj;
                this.name = name;
                this.handler = handler;
                this.oldVal = this.copy(obj[name]);
                this.watch(function () {
                    if (this.oldVal !== obj[name])
                        this.handler.call(null, obj, name, this.oldVal, obj[name]);
                    this.oldVal = this.copy(obj[name]);
                }.bind(this));
            }
            Watcher.prototype.watch = function (cb) {
                var fn = window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimationFrame ||
                    function (callback) {
                        window.setTimeout(callback, 1000 / 60);
                    };
                fn(cb);
            };
            Watcher.prototype.copy = function (val) {
                return JSON.parse(JSON.stringify(val));
            };
            return Watcher;
        })();
    })(watch = ho.watch || (ho.watch = {}));
})(ho || (ho = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi90cy93YXRjaC50cyJdLCJuYW1lcyI6WyJobyIsImhvLndhdGNoIiwiaG8ud2F0Y2gud2F0Y2giLCJoby53YXRjaC53YXRjaE5ld2VyIiwiaG8ud2F0Y2gud2F0Y2hJRTgiLCJoby53YXRjaC5XYXRjaGVyIiwiaG8ud2F0Y2guV2F0Y2hlci5jb25zdHJ1Y3RvciIsImhvLndhdGNoLldhdGNoZXIud2F0Y2giLCJoby53YXRjaC5XYXRjaGVyLmNvcHkiXSwibWFwcGluZ3MiOiJBQUFBLElBQU8sRUFBRSxDQXVFUjtBQXZFRCxXQUFPLEVBQUU7SUFBQ0EsSUFBQUEsS0FBS0EsQ0F1RWRBO0lBdkVTQSxXQUFBQSxPQUFLQSxFQUFDQSxDQUFDQTtRQUNoQkMsSUFBTUEsR0FBR0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsRUFBRUEsQ0FBQ0E7UUFDUkEsZ0JBQVFBLEdBQVdBLEdBQUdBLENBQUNBO1FBSWxDQSxlQUFzQkEsR0FBUUEsRUFBRUEsSUFBWUEsRUFBRUEsT0FBZ0JBO1lBQzdEQyxDQUFDQSxHQUFHQSxHQUFHQSxRQUFRQSxDQUFDQSxHQUFHQSxFQUFFQSxJQUFJQSxFQUFFQSxPQUFPQSxDQUFDQSxHQUFHQSxVQUFVQSxDQUFDQSxHQUFHQSxFQUFFQSxJQUFJQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUN0RUEsQ0FBQ0E7UUFGZUQsYUFBS0EsUUFFcEJBLENBQUFBO1FBRURBLG9CQUFvQkEsR0FBUUEsRUFBRUEsSUFBWUEsRUFBRUEsT0FBZ0JBO1lBQzNERSxJQUFJQSxNQUFNQSxHQUFHQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUN2QkEsSUFBSUEsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQUE7WUFDbkJBLElBQUlBLE1BQU1BLEdBQUdBO2dCQUNaLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDZixDQUFDLENBQUNBO1lBQ0ZBLElBQUlBLE1BQU1BLEdBQUdB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S0FBRixFQUFFLFFBdUVSIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIGhvLndhdGNoIHtcblx0Y29uc3QgaWU4ID0gIS1bMSxdO1xuXHRleHBvcnQgdmFyIGludGVydmFsOiBudW1iZXIgPSA0MDA7XG5cblx0ZXhwb3J0IHR5cGUgSGFuZGxlciA9IChvYmo6YW55LCBuYW1lOnN0cmluZywgb2xkViwgbmV3Vik9PmFueTtcblxuXHRleHBvcnQgZnVuY3Rpb24gd2F0Y2gob2JqOiBhbnksIG5hbWU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcikge1xuXHRcdCFpZTggPyB3YXRjaElFOChvYmosIG5hbWUsIGhhbmRsZXIpIDogd2F0Y2hOZXdlcihvYmosIG5hbWUsIGhhbmRsZXIpO1xuXHR9XG5cblx0ZnVuY3Rpb24gd2F0Y2hOZXdlcihvYmo6IGFueSwgbmFtZTogc3RyaW5nLCBoYW5kbGVyOiBIYW5kbGVyKTogdm9pZCB7XG5cdFx0bGV0IG9sZHZhbCA9IG9ialtuYW1lXTtcblx0XHRsZXQgbmV3dmFsID0gb2xkdmFsXG5cdFx0bGV0IGdldHRlciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBuZXd2YWw7XG5cdFx0fTtcblx0XHRsZXQgc2V0dGVyID0gZnVuY3Rpb24gKHZhbCkge1xuXHRcdFx0b2xkdmFsID0gbmV3dmFsO1xuXHRcdFx0bmV3dmFsID0gdmFsO1xuXHRcdFx0aGFuZGxlci5jYWxsKG9iaiwgbmFtZSwgb2xkdmFsLCB2YWwpO1xuXHRcdH07XG5cblx0XHRcdGlmIChkZWxldGUgb2JqW25hbWVdKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG5cdFx0XHRcdFx0ICBnZXQ6IGdldHRlclxuXHRcdFx0XHRcdCwgc2V0OiBzZXR0ZXJcblx0XHRcdFx0XHQsIGVudW1lcmFibGU6IHRydWVcblx0XHRcdFx0XHQsIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdGVsc2Vcblx0XHRcdFx0dGhyb3cgYENvdWxkIG5vdCB3YXRjaCBwcm9wZXJ0eSAke25hbWV9IG9uIE9iamVjdCAke29ian1gO1xuXHR9XG5cblx0ZnVuY3Rpb24gd2F0Y2hJRTgob2JqOiBhbnksIG5hbWU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcik6IHZvaWQge1xuXHRcdG5ldyBXYXRjaGVyKG9iaiwgbmFtZSwgaGFuZGxlcik7XG5cdH1cblxuXHRjbGFzcyBXYXRjaGVyIHtcblxuXHRcdHByaXZhdGUgb2xkVmFsOmFueTtcblxuXHRcdGNvbnN0cnVjdG9yKHByaXZhdGUgb2JqOiBhbnksIHByaXZhdGUgbmFtZTogc3RyaW5nLCBwcml2YXRlIGhhbmRsZXI6IEhhbmRsZXIpIHtcblx0XHRcdHRoaXMub2xkVmFsID0gdGhpcy5jb3B5KG9ialtuYW1lXSk7XG5cblx0XHRcdHRoaXMud2F0Y2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmKHRoaXMub2xkVmFsICE9PSBvYmpbbmFtZV0pXG5cdFx0XHRcdFx0dGhpcy5oYW5kbGVyLmNhbGwobnVsbCwgb2JqLCBuYW1lLCB0aGlzLm9sZFZhbCwgb2JqW25hbWVdKTtcblx0XHRcdFx0XHR0aGlzLm9sZFZhbCA9IHRoaXMuY29weShvYmpbbmFtZV0pO1xuXHRcdFx0fS5iaW5kKHRoaXMpKTtcblx0XHR9XG5cblx0XHRwcml2YXRlIHdhdGNoKGNiOiBGdW5jdGlvbik6IHZvaWQge1xuXHRcdFx0bGV0IGZuID1cblx0XHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgICAgICAgfHxcblx0ICBcdFx0d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuXHQgIFx0XHR3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lICAgIHx8XG5cdCAgXHRcdHdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lICAgICAgfHxcblx0ICBcdFx0d2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lICAgICB8fFxuXHQgIFx0XHRmdW5jdGlvbihjYWxsYmFjazogRnVuY3Rpb24pe1xuXHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dChjYWxsYmFjaywgMTAwMCAvIDYwKTtcblx0ICBcdFx0fTtcblxuXHRcdFx0Zm4oY2IpO1xuXHRcdH1cblxuXHRcdHByaXZhdGUgY29weSh2YWw6IGFueSk6IGFueSB7XG5cdFx0XHRyZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2YWwpKTtcblx0XHR9XG5cdH1cblxufVxuIl19